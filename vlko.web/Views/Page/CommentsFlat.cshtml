@model vlko.core.Components.PagedModel<CommentViewModel>
@using vlko.BlogModule.Commands.ViewModel
@using vlko.web.Controllers;
@using vlko.core.Components;
@using vlko.web.ViewModel.Page;
@{
	Html.ScriptInclude("~/Scripts/Grid.js");
}
<section class="flat_comments cleaner">
@foreach (var item in Model)
{
	<article class="page_comment cleaner">
		<a class="icon-link reply_link" title="Reply" rel="@item.Id.ToString()" href="@Routes.PageCommentReply(
																				  friendlyUrl : Html.ViewContext.RouteData.GetRequiredString("friendlyUrl"),
																				  parentId : item.Id,
																				  sort : Html.ViewContext.RouteData.GetRequiredString("sort")
																			)"><img src="@Url.Content("~/Content/images/comment.gif")" alt="Comment"/></a>
		<div class="author" title="Author">@((item.Owner == null) ? "anonymous-" + item.AnonymousName : item.Owner.Name)</div>
		<div class="date" title="Date">@String.Format("{0:g}", item.CreatedDate)@(item.Changed ? " ver. " + item.Version : string.Empty)</div>

		<div class="title">@Html.Raw(item.Name)</div>
		<div class="text">@Html.Raw(item.Text)</div>
	</article>
}
</section>
<div>@Pager.Render(Html, Model, "PageView")</div>

